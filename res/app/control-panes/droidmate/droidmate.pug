.widget-container.fluid-height(ng-controller='DroidMateCtrl').stf-droidmate
  .heading
    stacked-icon(icon='fa-android', color='color-green')
    span(translate) DroidMate Testing
  .widget-content
    // TODO think about why disabling parameters like Exploration-launchActivityDelay and not just remove the checkbox
    // and display the defualt value
    table.table.table-hover.table-condensed.dataTable.ng-table
      thead
        tr
          th
            span(translate) Parameter Name
          th
            span(translate) Use Parameter
          th
            span(translate) Parameter Value
          th
            span(translate) Description
      tbody
        //////////////////////////////// Selectors
        tbody(class="tbody-dark-title")
          tr
            td
              span Selectors
            td
            td
            td
        // Selectors-actionLimit
        tr
          td
            span Selectors-actionLimit
          td
            span Required
          td
            input(type='number', name='selectorsActionLimit', min="1", step="1", ng-model='selectorsActionLimit', style='width:10em')
          td
            span How many actions the GUI exploration strategy can conduct before terminating. One of the following parameters is required: actionLimit, timeLimit.
        // Selectors-timeLimit
        tr
          td
            span Selectors-timeLimit
          td
            span Required
          td
            input(type='number', name='selectorsTimeLimit', min="1", step="1", ng-model='selectorsTimeLimit', style='width:10em')
          td
            span How long the exploration of any given apk should take, in seconds. If set to 0, instead actionLimit will be used. One of the following parameters is required: actionLimit, timeLimit.
        // Selectors-randomSeed
        tr
          td
            span Selectors-randomSeed
          td
            span Required
          td
            input(type='number', name='selectorsRandomSeed', min="-1", step="1", ng-model='selectorsRandomSeed', style='width:10em')
          td
            span The seed for a random generator used by a random-clicking GUI exploration strategy. If null, a seed will be randomized.
        // Selectors-pressBackProbability
        tr
          td
            span Selectors-pressBackProbability
          td
            input(type='checkbox', name='selectorsPressBackProbabilityCB', ng-model='selectorsPressBackProbabilityCB', value=0, checked='')
          td
            input(type='number',
                  class="spanparameter",
                  name='selectorsPressBackProbability',
                  min="0",
                  step="0.01",
                  ng-model='selectorsPressBackProbability',
                  ng-disabled="disabledIfCheckboxFalse(selectorsPressBackProbabilityCB)")
          td
              span Probability of randomly pressing the back button while exploring. Set to 0 to disable the press back strategy.
        // Selectors-widgetIndexes
        tr
          td
            span Selectors-widgetIndexes
          td
            input(type='checkbox', name='selectorsWidgetIndexesCB', ng-model='selectorsWidgetIndexesCB', value=0, checked='')
          td
            input(type='text',
                  class="spanparameter",
                  name='selectorsWidgetIndexes',
                  ng-model='selectorsWidgetIndexes',
                  ng-disabled="disabledIfCheckboxFalse(selectorsWidgetIndexesCB)")
          // Use unicode: &#60; = <; &#62; = >;
          td
            span Makes the exploration strategy to choose widgets to click that have the indexes as provided by this parameter, in sequence. The format is: [&#60;first widget index&#62;, &#60;second widget index&#62;,...&#60;nth widget index&#62;], starting indexing at 0. Example: [0,7,3]
        // Selectors-resetEvery
        tr
          td
            span Selectors-resetEvery
          td
            input(type='checkbox', name='selectorsResetEveryCB', ng-model='selectorsResetEveryCB', value=0, checked='')
          td
            input(type='number',
                  class="spanparameter",
                  name='selectorsResetEvery',
                  min="0",
                  step="1",
                  ng-model='selectorsResetEvery',
                  ng-disabled="disabledIfCheckboxFalse(selectorsResetEveryCB)")
          td
            span Number of actions to automatically reset the exploration from its initial activity. Set to 0 to disable.
        // Selectors-stopOnExhaustion
        tr
          td
            span Selectors-stopOnExhaustion
          td
            span
          td
            input(type='checkbox', name='selectorsStopOnExhaustionCB', value='1', ng-model='selectorsStopOnExhaustionCB')
          td
            span Terminate exploration when all widgets have been explored at least 1x.
        // Selectors-dfs
        tr
          td
            span Selectors-dfs
          td
            span
          td
            input(type='checkbox', name='selectorsDfsCB', value='1', ng-model='selectorsDfsCB')
          td
            span Use Depth-First-Search strategy, if the strategy is registered.
        //////////////////////////////// Core
        tbody(class="tbody-dark-title")
          tr
            td
              span Core
            td
            td
            td
        // Core-logLevel
        tr
          td
            span Core-logLevel
          td
            input(type='checkbox', name='coreLogLevelCB', ng-model='coreLogLevelCB', value=0, checked='')
          td
            input(type='text',
                  class="spanparameter",
                  name='coreLogLevel',
                  ng-model='coreLogLevel',
                  ng-disabled="disabledIfCheckboxFalse(coreLogLevelCB)")
          td
            span Logging level of the entirety of application. Possible values, comma separated: info, debug, trace, warn, error.
        //////////////////////////////// ApiMonitorServer
        tbody(class="tbody-dark-title")
          tr
            td
              span ApiMonitorServer
            td
            td
            td
        // ApiMonitorServer-monitorSocketTimeout
        tr
          td
            span ApiMonitorServer-monitorSocketTimeout
          td
            input(type='checkbox', name='apiMonitorServerMonitorSocketTimeoutCB', ng-model='apiMonitorServerMonitorSocketTimeoutCB', value=0, checked='')
          td
            input(type='number',
                  class="spanparameter",
                  name='apiMonitorServerMonitorSocketTimeout',
                  min="0",
                  step="1",
                  ng-model='apiMonitorServerMonitorSocketTimeout',
                  ng-disabled="disabledIfCheckboxFalse(apiMonitorServerMonitorSocketTimeoutCB)")
          td
            span Socket timeout to communicate with the API monitor service.
        // ApiMonitorServer-basePort
        tr
          td
            span ApiMonitorServer-basePort
          td
            input(type='checkbox', name='apiMonitorServerBasePortCB', ng-model='apiMonitorServerBasePortCB', value=0, checked='')
          td
            input(type='number',
                  class="spanparameter",
                  name='apiMonitorServerBasePort',
                  min="0",
                  step="1",
                  ng-model='apiMonitorServerBasePort',
                  ng-disabled="disabledIfCheckboxFalse(apiMonitorServerBasePortCB)")
          td
            span The base port for the communication with the the API monitor service. DroidMate communicates over this base port + device index.
        //////////////////////////////// ExecutionMode
        tbody(class="tbody-dark-title")
          tr
            td
              span ExecutionMode
            td
            td
            td
        // Use a radio button group here, because the execution modes are only exclusively usable
        // ExecutionMode-inline
        tr
          td
            span ExecutionMode-inline
          td
            span
          td
            input(type='radio', name='executionMode', value='1', ng-model='executionModeInlineCB')
          td
            span If present, instead of normal run, DroidMate will inline all non-inlined apks. Before inlining backup copies of the apks will be created and put into a sub-directory of the directory containing the apks. This flag is not combinable with another execution mode.
        // TODO not available on the farm right now
        // ExecutionMode-report
        //tr
        //  td
        //    span
        //  td
        //    span ExecutionMode-report
        //  td
        //    input(type='checkbox', name='executionModeReportCB', value='1', ng-model='executionModeReportCB')
        //  td
        //    span If present, instead of normal run, DroidMate will generate reports from previously serialized data.
        // ExecutionMode-explore
        tr
          td
            span ExecutionMode-explore
          td
            span
          td
            input(type='radio', name='executionMode', value='1', ng-model='executionModeExploreCB')
          td
            span Run DroidMate in exploration mode.
        // ExecutionMode-coverage
        tr
          td
            span ExecutionMode-coverage
          td
            span
          td
            input(type='radio', name='executionMode', value='1', ng-model='executionModeCoverageCB')
          td
            span If present, instead of normal run, DroidMate will run in 'instrument APK for coverage' mode. This flag is not combinable with another execution mode.
        //////////////////////////////// Deploy
        tbody(class="tbody-dark-title")
          tr
            td
              span Deploy
            td
            td
            td
        // Deploy-installApk
        tr
          td
            span Deploy-installApk
          td
            span
          td
            input(type='checkbox', name='deployInstallApkCB', value='1', ng-model='deployInstallApkCB')
          td
            span Reinstall the app to the device. If the app is not previously installed the exploration will fail.
        // Deploy-installAux
        tr
          td
            span Deploy-installAux
          td
            span
          td
            input(type='checkbox', name='deployInstallAuxCB', value='1', ng-model='deployInstallAuxCB')
          td
            span Reinstall the auxiliary files (UIAutomator and Monitor) to the device. If the auxiliary files are not previously installed the exploration will fail.
        // Deploy-uninstallApk
        tr
          td
            span Deploy-uninstallApk
          td
            span
          td
            input(type='checkbox', name='deployUninstallApkCB', value='1', ng-model='deployUninstallApkCB')
          td
            span Uninstall the APK after the exploration.
        // Deploy-uninstallAux
        tr
          td
            span Deploy-uninstallAux
          td
            span
          td
            input(type='checkbox', name='deployUninstallAuxCB', value='1', ng-model='deployUninstallAuxCB')
          td
            span Uninstall auxiliary files (UIAutomator and Monitor) after the exploration.
        // Deploy-shuffleApks
        // TODO currently just single apk possible
        //tr
        //  td
        //    span
        //  td
        //    span Deploy-shuffleApks
        //  td
        //    input(type='checkbox', name='deployShuffleApksCB', value='1', ng-model='deployShuffleApksCB')
        //  td
        //    span Explore the apks in the input directory in a random order.
        // Deploy-deployRawApks
        tr
          td
            span Deploy-deployRawApks
          td
            span
          td
            input(type='checkbox', name='deployDeployRawApksCB', value='1', ng-model='deployDeployRawApksCB')
          td
            span Deploys apks to device in 'raw' form, that is, without instrumenting them. Will deploy them raw even if instrumented version is available from last run.
        //////////////////////////////// DeviceCommunication
        tbody(class="tbody-dark-title")
          tr
            td
              span DeviceCommunication
            td
            td
            td
        // DeviceCommunication-checkAppIsRunningRetryAttempts
        tr
          td
            span DeviceCommunication-checkAppIsRunningRetryAttempts
          td
            input(type='checkbox', name='deviceCommunicationCheckAppIsRunningRetryAttemptsCB', ng-model='deviceCommunicationCheckAppIsRunningRetryAttemptsCB', value=0, checked='')
          td
            input(type='number',
                  class="spanparameter",
                  name='deviceCommunicationCheckAppIsRunningRetryAttempts',
                  min="0",
                  step="1",
                  ng-model='deviceCommunicationCheckAppIsRunningRetryAttempts',
                  ng-disabled="disabledIfCheckboxFalse(deviceCommunicationCheckAppIsRunningRetryAttemptsCB)")
          td
            span Number of attempts to check if an app is running on the device.
        // DeviceCommunication-checkAppIsRunningRetryDelay
        tr
          td
            span DeviceCommunication-checkAppIsRunningRetryDelay
          td
            input(type='checkbox', name='deviceCommunicationCheckAppIsRunningRetryDelayCB', ng-model='deviceCommunicationCheckAppIsRunningRetryDelayCB', value=0, checked='')
          td
            input(type='number',
                  class="spanparameter",
                  name='deviceCommunicationCheckAppIsRunningRetryDelay',
                  min="0",
                  step="1",
                  ng-model='deviceCommunicationCheckAppIsRunningRetryDelay',
                  ng-disabled="disabledIfCheckboxFalse(deviceCommunicationCheckAppIsRunningRetryDelayCB)")
          td
            span Timeout for each attempt to check if an app is running on the device in milliseconds.
        // DeviceCommunication-checkDeviceAvailableAfterRebootAttempts
        tr
          td
            span DeviceCommunication-checkDeviceAvailableAfterRebootAttempts
          td
            input(type='checkbox', name='deviceCommunicationCheckDeviceAvailableAfterRebootAttemptsCB', ng-model='deviceCommunicationCheckDeviceAvailableAfterRebootAttemptsCB', value=0, checked='')
          td
            input(type='number',
                  class="spanparameter",
                  name='deviceCommunicationCheckDeviceAvailableAfterRebootAttempts',
                  min="0",
                  step="1",
                  ng-model='deviceCommunicationCheckDeviceAvailableAfterRebootAttempts',
                  ng-disabled="disabledIfCheckboxFalse(deviceCommunicationCheckDeviceAvailableAfterRebootAttemptsCB)")
          td
            span Determines how often DroidMate checks if a device is available after a reboot.
        // DeviceCommunication-checkDeviceAvailableAfterRebootFirstDelay
        tr
          td
            span DeviceCommunication-checkDeviceAvailableAfterRebootFirstDelay
          td
            input(type='checkbox', name='deviceCommunicationCheckDeviceAvailableAfterRebootFirstDelayCB', ng-model='deviceCommunicationCheckDeviceAvailableAfterRebootFirstDelayCB', value=0, checked='')
          td
            input(type='number',
                  class="spanparameter",
                  name='deviceCommunicationCheckDeviceAvailableAfterRebootFirstDelay',
                  min="0",
                  step="1",
                  ng-model='deviceCommunicationCheckDeviceAvailableAfterRebootFirstDelay',
                  ng-disabled="disabledIfCheckboxFalse(deviceCommunicationCheckDeviceAvailableAfterRebootFirstDelayCB)")
          td
            span The first delay after a device rebooted, before its availability will be checked.
        // DeviceCommunication-checkDeviceAvailableAfterRebootLaterDelays
        tr
          td
            span DeviceCommunication-checkDeviceAvailableAfterRebootLaterDelays
          td
            input(type='checkbox', name='deviceCommunicationCheckDeviceAvailableAfterRebootLaterDelaysCB', ng-model='deviceCommunicationCheckDeviceAvailableAfterRebootLaterDelaysCB', value=0, checked='')
          td
            input(type='number',
                  class="spanparameter",
                  name='deviceCommunicationCheckDeviceAvailableAfterRebootLaterDelays',
                  min="0",
                  step="1",
                  ng-model='deviceCommunicationCheckDeviceAvailableAfterRebootLaterDelays',
                  ng-disabled="disabledIfCheckboxFalse(deviceCommunicationCheckDeviceAvailableAfterRebootLaterDelaysCB)")
          td
            span The non-first delay after a device rebooted, before its availability will be checked.
        // DeviceCommunication-stopAppRetryAttempts
        tr
          td
            span DeviceCommunication-stopAppRetryAttempts
          td
            span TODO
          td
            input(type='number', name='deviceCommunicationStopAppRetryAttempts', min="0", step="1", ng-model='deviceCommunicationStopAppRetryAttempts', style='width:10em')
          td
            span Number of attempts to close an 'application has stopped' dialog.
        // DeviceCommunication-stopAppSuccessCheckDelay
        tr
          td
            span DeviceCommunication-stopAppSuccessCheckDelay
          td
            span TODO
          td
            input(type='number', name='deviceCommunicationStopAppSuccessCheckDelay', min="0", step="1", ng-model='deviceCommunicationStopAppSuccessCheckDelay', style='width:10em')
          td
            span Delay after each failed attempt close an 'application has stopped' dialog.
        // DeviceCommunication-waitForCanRebootDelay
        tr
          td
            span DeviceCommunication-waitForCanRebootDelay
          td
            input(type='checkbox', name='deviceCommunicationWaitForCanRebootDelayCB', ng-model='deviceCommunicationWaitForCanRebootDelayCB', value=0, checked='')
          td
            input(type='number',
                  class="spanparameter",
                  name='deviceCommunicationWaitForCanRebootDelay',
                  min="0",
                  step="1",
                  ng-model='deviceCommunicationWaitForCanRebootDelay',
                  ng-disabled="disabledIfCheckboxFalse(deviceCommunicationWaitForCanRebootDelayCB)")
          td
            span Delay (in milliseconds) after an attempt was made to reboot a device, before.
        // DeviceCommunication-deviceOperationAttempts
        tr
          td
            span DeviceCommunication-deviceOperationAttempts
          td
            input(type='checkbox', name='deviceCommunicationDeviceOperationAttemptsCB', ng-model='deviceCommunicationDeviceOperationAttemptsCB', value=0, checked='')
          td
            input(type='number',
                  class="spanparameter",
                  name='deviceCommunicationDeviceOperationAttempts',
                  min="0",
                  step="1",
                  ng-model='deviceCommunicationDeviceOperationAttempts',
                  ng-disabled="disabledIfCheckboxFalse(deviceCommunicationDeviceOperationAttemptsCB)")
          td
            span Number of attempts to retry other failed device operations.
        // DeviceCommunication-deviceOperationDelay
        tr
          td
            span DeviceCommunication-deviceOperationDelay
          td
            input(type='checkbox', name='deviceCommunicationDeviceOperationDelayCB', ng-model='deviceCommunicationDeviceOperationDelayCB', value=0, checked='')
          td
            input(type='number',
            class="spanparameter",
            name='deviceCommunicationDeviceOperationDelay',
            min="0",
            step="1",
            ng-model='deviceCommunicationDeviceOperationDelay',
            ng-disabled="disabledIfCheckboxFalse(deviceCommunicationDeviceOperationDelayCB)")
          td
            span Delay (in milliseconds) after an attempt was made to perform a device operation, before retrying again.
        // DeviceCommunication-waitForDevice
        tr
          td
            span DeviceCommunication-waitForDevice
          td
            span
          td
            input(type='checkbox', name='deviceCommunicationWaitForDeviceCB', value='1', ng-model='deviceCommunicationWaitForDeviceCB')
          td
            span Wait for a device to be connected to the PC instead of cancelling the exploration.
        //////////////////////////////// Exploration
        tbody(class="tbody-dark-title")
          tr
            td
              span Exploration
            td
            td
            td
        // TODO not available on the farm right now
        // Exploration-apksLimit
        //tr
        //  td
        //    input(type='checkbox', name='', ng-model='', value=0, checked='')
        //  td
        //    span Exploration-apksLimit
        //  td
        //    input(type='number', name='', min="0", step="0", ng-model='', style='width:10em')
        //  td
        //    span Limits the number of apks on which DroidMate will run. 0 means no limit.
        // TODO not available on the farm right now
        // Exploration-apkNames
        //tr
        //  td
        //    input(type='checkbox', name='', ng-model='', value=0, checked='')
        //  td
        //    span Exploration-apksLimit
        //  td
        //    input(type='number', name='', min="0", step="0", ng-model='', style='width:10em')
        //  td
        //    span Limits the number of apks on which DroidMate will run. 0 means no limit.
        // Exploration-deviceIndex
        tr
          td
            span Exploration-deviceIndex
          td
            input(type='checkbox', name='explorationDeviceIndexCB', ng-model='explorationDeviceIndexCB', value=0, checked='')
          td
            input(type='number',
                  class="spanparameter",
                  name='explorationDeviceIndex',
                  min="0",
                  step="0",
                  ng-model='explorationDeviceIndex',
                  ng-disabled="disabledIfCheckboxFalse(explorationDeviceIndexCB)")
          td
            span Index of the device to be used (from adb devices). Zero based.
        // Exploration-runOnNotInlined
        tr
          td
            span Exploration-runOnNotInlined
          td
            span
          td
            input(type='checkbox', name='explorationRunOnNotInlinedCB', value='1', ng-model='explorationRunOnNotInlinedCB')
          td
            span Allow DroidMate to run on non-inlined apks.
        // Exploration-launchActivityDelay
        tr
          td
            span Exploration-launchActivityDelay
          td
            input(type='checkbox', name='explorationLaunchActivityDelayCB', ng-model='explorationLaunchActivityDelayCB', value=0, checked='')
          td
            input(type='number',
                  class="spanparameter",
                  name='explorationLaunchActivityDelay',
                  min="0",
                  step="0",
                  ng-model='explorationLaunchActivityDelay',
                  ng-disabled="disabledIfCheckboxFalse(explorationLaunchActivityDelayCB)")
          td
            span Delay (in milliseconds) to wait for the app to load before continuing the exploration after a reset (or exploration start).
        // Exploration-launchActivityTimeout
        tr
          td
            span Exploration-launchActivityTimeout
          td
            input(type='checkbox', name='explorationLaunchActivityTimeoutCB', ng-model='explorationLaunchActivityTimeoutCB', value=0, checked='')
          td
            input(type='number',
                  class="spanparameter",
                  name='explorationLaunchActivityTimeout',
                  min="0",
                  step="0",
                  ng-model='explorationLaunchActivityTimeout',
                  ng-disabled="disabledIfCheckboxFalse(explorationLaunchActivityTimeoutCB)")
          td
            span Maximum amount of time to be waited for an app to start after a reset in milliseconds.
        // Exploration-apiVersion
        tr
          td
            span Exploration-apiVersion
          td
            input(type='checkbox', name='explorationApiVersionCB', ng-model='explorationApiVersionCB', value=0, checked='')
          td
            input(type='number',
                  class="spanparameter",
                  name='explorationApiVersion',
                  min="0",
                  step="0",
                  ng-model='explorationApiVersion',
                  ng-disabled="disabledIfCheckboxFalse(explorationApiVersionCB)")
          td
            span Has to be set to the Android API version corresponding to the (virtual) devices on which DroidMate will run. Currently supported values: api23
        //////////////////////////////// Strategies
        tbody(class="tbody-dark-title")
          tr
            td
              span Strategies
            td
            td
            td
        // Strategies-reset
        tr
          td
            span Strategies-reset
          td
            span
          td
            input(type='checkbox', name='strategiesResetCB', value='1', ng-model='strategiesResetCB')
          td
            span Enables use of the reset strategy during an exploration.
        // Strategies-explore
        tr
          td
            span Strategies-explore
          td
            span
          td
            input(type='checkbox', name='strategiesExploreCB', value='1', ng-model='strategiesExploreCB')
          td
            span Enables use of biased random exploration strategy.
        // Strategies-terminate
        tr
          td
            span Strategies-terminate
          td
            span
          td
            input(type='checkbox', name='strategiesTerminateCB', value='1', ng-model='strategiesTerminateCB')
          td
            span Enables use of default terminate strategy.
        // Strategies-back
        tr
          td
            span Strategies-back
          td
            span
          td
            input(type='checkbox', name='strategiesBackCB', value='1', ng-model='strategiesBackCB')
          td
            span Enables use of 'press back button' strategy.
        // Strategies-modelBased
        tr
          td
            span Strategies-modelBased
          td
            span
          td
            input(type='checkbox', name='strategiesModelBasedCB', value='1', ng-model='strategiesModelBasedCB')
          td
            span Enables use of random exploration strategy using static model.
        // Strategies-fitnessProportionate
        tr
          td
            span Strategies-fitnessProportionate
          td
            span
          td
            input(type='checkbox', name='strategiesFitnessProportionateCB', value='1', ng-model='strategiesFitnessProportionateCB')
          td
            span Enables use of random exploration strategy using static model and fitness proportionate selection.
        // Strategies-allowRuntimeDialog
        tr
          td
            span Strategies-allowRuntimeDialog
          td
            span
          td
            input(type='checkbox', name='strategiesAllowRuntimeDialogCB', value='1', ng-model='strategiesAllowRuntimeDialogCB')
          td
            span Enables use of strategy to always click 'Allow' on permission dialogs.
        // Strategies-denyRuntimeDialog
        tr
          td
            span Strategies-denyRuntimeDialog
          td
            span
          td
            input(type='checkbox', name='strategiesDenyRuntimeDialogCB', value='1', ng-model='strategiesDenyRuntimeDialogCB')
          td
            span Enables use of strategy to always click 'Deny' on permission dialogs.
        // Strategies-dfs
        tr
          td
            span Strategies-dfs
          td
            span
          td
            input(type='checkbox', name='strategiesDfsCB', value='1', ng-model='strategiesDfsCB')
          td
            span Enables use of Depth-First-Search strategy.
        // Strategies-rotateUI
        tr
          td
            span Strategies-rotateUI
          td
            span
          td
            input(type='checkbox', name='strategiesRotateUICB', value='1', ng-model='strategiesRotateUICB')
          td
            span Enables use of Rotate UI strategy.
        // Strategies-minimizeMaximize
        tr
          td
            span Strategies-minimizeMaximize
          td
            span
          td
            input(type='checkbox', name='strategiesMinimizeMaximizeCB', value='1', ng-model='strategiesMinimizeMaximizeCB')
          td
            span Enables use of Minimize-Maximize strategy to attempt to close the app and reopen it on the same screen.
        // Strategies-Parameters-uiRotation
        tr
          td
            span Strategies-Parameters-uiRotation
          td
            span
          td
            input(type='checkbox', name='strategiesParametersUiRotationCB', value='1', ng-model='strategiesParametersUiRotationCB')
          td
            span Value of the UI rotation for Rotate UI strategy. Valid values are: 0, 90, 180, 270. Other values will be rounded to one of these.
        // TODO not available on the farm right now
        // Strategies-playback
        //tr
        //  td
        //    span
        //  td
        //    span Strategies-playback
        //  td
        //    input(type='checkbox', name='strategiesPlaybackCB', value='1', ng-model='strategiesPlaybackCB')
        //  td
        //    span Enables use of playback strategy (if a playback model is provided).
        //////////////////////////////// Report
        // TODO not available on the farm right now
        // inputDir and includePlots
        //////////////////////////////// UiAutomatorServer
        tbody(class="tbody-dark-title")
          tr
            td
              span UiAutomatorServer
            td
            td
            td
        // UiAutomatorServer-startTimeout
        tr
          td
            span UiAutomatorServer-startTimeout
          td
            input(type='checkbox', name='uiAutomatorServerStartTimeoutCB', ng-model='uiAutomatorServerStartTimeoutCB', value=0, checked='')
          td
            input(type='number',
                  class="spanparameter",
                  name='uiAutomatorServerStartTimeout',
                  min="0",
                  step="1",
                  ng-model='uiAutomatorServerStartTimeout',
                  ng-disabled="disabledIfCheckboxFalse(uiAutomatorServerStartTimeoutCB)")
          td
            span How long DroidMate should wait, in milliseconds, for message on logcat confirming that UiAutomatorDaemonServer has started on android (virtual) device.
        // UiAutomatorServer-waitForIdleTimeout
        tr
          td
            span UiAutomatorServer-waitForIdleTimeout
          td
            input(type='checkbox', name='uiAutomatorServerWaitForIdleTimeoutCB', ng-model='uiAutomatorServerWaitForIdleTimeoutCB', value=0, checked='')
          td
            input(type='number',
                  class="spanparameter",
                  name='uiAutomatorServerWaitForIdleTimeout',
                  min="0",
                  step="1",
                  ng-model='uiAutomatorServerWaitForIdleTimeout',
                  ng-disabled="disabledIfCheckboxFalse(uiAutomatorServerWaitForIdleTimeoutCB)")
          td
            span Timeout for a device to be idle an operation.
        // UiAutomatorServer-waitForInteractableTimeout
        tr
          td
            span UiAutomatorServer-waitForInteractableTimeout
          td
            input(type='checkbox', name='uiAutomatorServerWaitForInteractableTimeoutCB', ng-model='uiAutomatorServerWaitForInteractableTimeoutCB', value=0, checked='')
          td
            input(type='number',
            class="spanparameter",
            name='uiAutomatorServerWaitForInteractableTimeout',
            min="0",
            step="1",
            ng-model='uiAutomatorServerWaitForInteractableTimeout',
            ng-disabled="disabledIfCheckboxFalse(uiAutomatorServerWaitForInteractableTimeoutCB)")
          td
            span Timeout for a widget to be available after an operation.
        // UiAutomatorServer-socketTimeout
        tr
          td
            span UiAutomatorServer-socketTimeout
          td
            input(type='checkbox', name='uiAutomatorServerSocketTimeoutCB', ng-model='uiAutomatorServerSocketTimeoutCB', value=0, checked='')
          td
            input(type='number',
                  class="spanparameter",
                  name='uiAutomatorServerSocketTimeout',
                  min="0",
                  step="1",
                  ng-model='uiAutomatorServerSocketTimeout',
                  ng-disabled="disabledIfCheckboxFalse(uiAutomatorServerSocketTimeoutCB)")
          td
            span Socket timeout to communicate with the UiDaemonServer.


  .widget-content.padded()
    .drop-area(ng-file-drop='uploadFile($files)', ng-file-drag-over-class='dragover').file-input.btn-file
      input(type='file', ng-file-select='uploadFile($files)')

      i.fa.fa-2x.fa-download.drop-area-icon
      .drop-area-text(translate) Drop .apk for app upload

    .upload-status(ng-if='upload').selectable
      uib-progressbar(max='100', value='upload.progress', ng-if='!upload.settled',
      ng-class='{"active": !upload.settled}').progress-striped

      div(ng-if='!upload.error')
        span(ng-switch='upload.state')
          strong(ng-switch-when='uploading')
            span(translate) Uploading...
            span  ({{upload.progress}}%)
          strong(ng-switch-when='processing')
            span(translate) Processing...
            span  ({{upload.progress}}%)
          strong(ng-switch-when='installed')
            span  (100%)

      alert(type='danger', close='clear()', ng-if='upload.error')
        strong(translate) Oops!
        | &#x20;
        span {{ upload.error | installError | translate }} ({{ upload.error }})
  .widget-content.padded
    button(ng-click='test()', ng-disabled='checkTestButton()').btn.btn-sm.btn-success
      i.fa.fa-android
      span(translate) Run Test
  .widget-content.padded
    button(ng-click='downloadTestResults()', ng-show='result').btn.btn-sm.btn-success
      i.fa.fa-archive
      span(translate) Download test results
  pre.shell-results.selectable(ng-show='result') {{result}}
  pre.shell-results.selectable.shell-results-empty(ng-show='!result') Test output will be displayed here

  error-message(message='{{error}}')
